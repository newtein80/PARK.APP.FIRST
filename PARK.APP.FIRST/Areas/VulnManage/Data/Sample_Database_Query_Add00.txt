USE [PJSWORK]
GO

/****** Object:  StoredProcedure [dbo].[SP_VULN_INFO_INS_WITH_RTN]    Script Date: 2018-12-03 오전 5:48:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create procedure [dbo].[SP_VULN_INFO_INS_WITH_RTN]
    @gubun NVARCHAR(32)
    , @diag_type NVARCHAR(32)
    , @comp_seq BIGINT
    , @vuln_seq BIGINT
    , @cur_group_seq BIGINT
    , @new_group_seq BIGINT
    , @cur_sort_index BIGINT
    , @new_sort_index BIGINT
    , @manual_yn nvarchar(1)
    , @auto_yn nvarchar(1)
    , @vuln_name nvarchar(128)
    , @rate nvarchar(32)
    , @score nvarchar(2)
    , @apply_time nvarchar(2)
    , @detail text
    , @detail_path nvarchar(256)
    , @overview nvarchar(2048)
	, @judgement nvarchar(2048)
    , @effect nvarchar(2048)
    , @remedy text
    , @remedy_path nvarchar(2048)
    , @remedy_detail text
    , @apply_target nvarchar(1024)
    , @use_yn nvarchar(1)
    , @user_id nvarchar(16)
    , @manage_id nvarchar(32)
    , @client_standard_id nvarchar(32)
	, @rtn_message nvarchar(128) output

as

set nocount on

declare @rule_yn NVARCHAR(1)
        , @max_vuln_seq bigint
        , @max_sort_index bigint
		, @vuln_count bigint

begin
	begin try
		begin tran
			set @rtn_message = 'NONE'
    
			set @max_vuln_seq = (select isnull(MAX(VULN_SEQ), 0) + 1 from dbo.TVuln with(nolock))

			if(@diag_type = 'WEB_VULN') begin
				set @rule_yn = 'Y'
			end
			else begin
				set @rule_yn = 'N'
			end
    
			if('' = @detail_path or '' = ISNULL(@detail_path, '')) begin
				set @detail_path = null
			end

			if('' = @remedy_path or '' = ISNULL(@remedy_path, '')) begin
				set @remedy_path = null
			end
    
	
			if(@gubun = 'c') begin
				if('0' = @new_sort_index) begin
					set @vuln_count = (select count(*) from dbo.TVuln where GROUP_SEQ = @new_group_seq)

					if(1 > @vuln_count) begin
						set @max_sort_index = 1
					end
					else begin
						set @max_sort_index = (
							select top 1 
								SORT_ORDER + 1 as MAX_SORT_ORDER
							from dbo.TVuln
							where GROUP_SEQ = @new_group_seq
							order by SORT_ORDER desc)
					end
				end
				else begin
					set @max_sort_index = @new_sort_index
				end
                
				UPDATE dbo.TVuln SET
					SORT_ORDER = SORT_ORDER + 1
				WHERE SORT_ORDER > @max_sort_index - 1
				and GROUP_SEQ = @new_group_seq
        
				insert into dbo.TVuln
				(  
					VULN_SEQ
					,  GROUP_SEQ
					,  MANUAL_YN
					,  AUTO_YN
					,  MANAGE_ID
					,  CLIENT_STANDARD_ID
					,  VULN_NAME
					,  SORT_ORDER
					,  RULE_YN
					,  RATE
					,  SCORE
					,  APPLY_TIME
					,  DETAIL
					,  DETAIL_PATH
					,  OVERVIEW
					,  JUDGEMENT
					,  EFFECT
					,  REMEDY
					,  REMEDY_PATH
					,  REMEDY_DETAIL
					--,  REFRRENCE
					--,  PARSER_CONTENTS
					,  APPLY_TARGET
					,  USE_YN
					,  EXCEPT_CD
					--,  EXCEPT_TERM_TYPE
					--,  EXCEPT_TERM_FR
					--,  EXCEPT_TERM_TO
					--,  EXCEPT_REASON
					--,  EXCEPT_USER_ID
					--,  EXCEPT_DT
					,  CREATE_USER_ID
					,  CREATE_DT
					--,  UPDATE_USER_ID
					--,  UPDATE_DT
				)
				values
				(
					@max_vuln_seq
					,  @new_group_seq
					,  @manual_yn
					,  @auto_yn
					,  @manage_id
					,  @client_standard_id
					,  @vuln_name
					,  @max_sort_index
					,  @rule_yn
					,  @rate
					,  @score
					,  @apply_time
					,  @detail
					,  ''--@detail_path
					,  @overview
					,  @judgement
					,  @effect
					,  @remedy
					,  ''--@remedy_path
					,  @remedy_detail
					--,  REFRRENCE
					--,  PARSER_CONTENTS
					,  ''
					,  'Y'
					,  'N'
					--,  EXCEPT_TERM_TYPE
					--,  EXCEPT_TERM_FR
					--,  EXCEPT_TERM_TO
					--,  EXCEPT_REASON
					--,  EXCEPT_USER_ID
					--,  EXCEPT_DT
					,  @user_id
					,  GETDATE()
					--,  UPDATE_USER_ID
					--,  UPDATE_DT
				)
			end
    
			set @rtn_message = 'OK'

		commit tran
	end try
	begin catch
		if (@@TRANCOUNT <> 0) begin
			rollback tran
			-- 리턴 메세지
			SET @rtn_message = 'Error Line :' + CAST(ERROR_LINE() AS VARCHAR) + ' ' +CAST(ERROR_NUMBER() AS VARCHAR) + ' ' + ISNULL(ERROR_PROCEDURE(),'없음')
			-- 에러 프로세스
            DECLARE @v          NVARCHAR(50)
            DECLARE @Name       NVARCHAR(50) = CAST(ERROR_PROCEDURE() AS VARCHAR)
            DECLARE @Line       NVARCHAR(10) = CAST(ERROR_LINE() AS VARCHAR)
            DECLARE @Number     NVARCHAR(10) = CAST(ERROR_NUMBER() AS VARCHAR)
            DECLARE @Date       DATETIME = GETDATE()
            --EXEC uspDBErrorInsert 'INSERT', -1, @Name, @Line, @Number, @Date, '', @v OUTPUT
		end
	end catch

	return
end
GO