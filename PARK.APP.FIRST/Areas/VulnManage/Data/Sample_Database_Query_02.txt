USE [PJSWORK]
GO

/****** Object:  StoredProcedure [dbo].[SP_VULN_GROUP_LIST]    Script Date: 11/22/2018 13:25:31 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create procedure [dbo].[SP_VULN_GROUP_LIST]
    @comp_seq           nvarchar(32)
    ,   @diag_type      nvarchar(32)
    ,   @diag_kind      nvarchar(32)
    ,   @group_seq      nvarchar(32)
    ,   @group_name     nvarchar(128)
	,   @user_id		nvarchar(16)
	,   @sort_field		nvarchar(50)
    ,   @is_desc		tinyint = 1
	,   @pagesize		int
    ,   @pageindex		int
    ,   @allCount		bigint output
as
	
set transaction isolation level read uncommitted
set nocount on

begin
    declare  
        @SQLString      nvarchar(max) = ''
        ,   @wheredata  nvarchar(max) = ''
        ,   @orderby    varchar(500) = ' order by DIAG_KIND, GROUP_ID asc'
        ,   @subquery   varchar(max) = ''

    if 'all' = @comp_seq or '' = @comp_seq or '' = isnull(@comp_seq, '') begin
        set @comp_seq = null;
    end

    if 'all' = @diag_type or '' = @diag_type or '' = isnull(@diag_type, '') begin
    set @diag_type = null;
    end

    if 'all' = @diag_kind or '' = @diag_kind or '' = isnull(@diag_kind, '') begin
    set @diag_kind = null;
    end

    if '' = @group_name or '' = isnull(@group_name, '') begin
        set @group_name = null;
    end

    if(@comp_seq is not null) begin
	    set @wheredata =  @wheredata + ' and t5.COMP_SEQ = ''' + @comp_seq + ''' '
    end

    if(@diag_type is not null) begin
	    set @wheredata =  @wheredata + ' and t5.DIAG_TYPE = ''' + @diag_type + ''' '
    end

    if(@diag_kind is not null) begin
	    set @wheredata =  @wheredata + ' and t5.DIAG_KIND = ''' + @diag_kind + ''' '
    end

    if(@group_name is not null) begin
	    set @wheredata =  @wheredata + ' and t5.GROUP_NAME like ''%' + @group_name + '%'' '
    end

    declare @fromidx int
    declare @toidx   int
    set @fromidx = ((@pageindex - 1) * @pagesize) + 1
    set @toidx = @pageindex * @pagesize

    set @SQLString = ' 
declare @T_TEMP table 
(
    TEMP_SEQ 	    bigint identity primary key
    ,   GROUP_SEQ   bigint
)

insert into @T_TEMP(GROUP_SEQ)  
select 
    t5.GROUP_SEQ
from
(
     select 
        t1.GROUP_SEQ
        ,   t1.GROUP_NAME
        ,   t1.DIAG_KIND
        ,   t2.DIAG_TYPE
        ,   t1.COMP_SEQ
        ,   t2.COMP_NAME
        ,   t1.UPPER_SEQ
        ,   t1.GROUP_ID
     from dbo.TVulnGroup as t1 with(nolock)
        inner join
        (
            select 
                COMP_SEQ
                ,   COMP_NAME
                ,   DIAG_TYPE
            from dbo.TCompInfo
        ) as t2
        on
        (
            t1.COMP_SEQ = t2.COMP_SEQ
        )
) as t5
where t5.UPPER_SEQ <> 0

'
    set @subquery = 
'
select  
    @p_value = count(*) 
from @T_TEMP

select 
    t3.*
from 
(
    select 
        t1.GROUP_SEQ
        ,   t1.GROUP_NAME
        ,   t1.DIAG_KIND
        ,   t1.GROUP_ID
        ,   t1.DIAG_TOOL
        ,   t1.CREATE_DT
        ,   t1.COMP_SEQ
        ,   t1.DIAG_KIND as DIAG_KIND_NAME
        ,   t1.DIAG_TOOL as DIAG_TOOL_NAME
    from dbo.TVulnGroup as t1 with(nolock)
    where UPPER_SEQ <> 0
) as t3
inner join @T_TEMP as t4
on
(
    t3.GROUP_SEQ = t4.GROUP_SEQ
)
'
    set @subquery = @subquery + ' where t4.TEMP_SEQ >= @fromidx and t4.TEMP_SEQ <= @toidx '     
    set @SQLString = @SQLString + @wheredata + @orderby + @subquery

    declare @params nvarchar(200)
    set   @params  ='@p_value int output , @toidx int, @fromidx int'
    
    exec sp_executesql  @SQLString
                      , @params
                      , @p_value = @allCount OUTPUT
                      , @fromidx = @fromidx
                      , @toidx = @toidx
                  
    select @allCount as TotCnt
end

GO


