// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PARK.APP.FIRST.Areas.VulnManage.Models.Vuln;

namespace PARK.APP.FIRST.Migrations
{
    [DbContext(typeof(VulnDbContext))]
    [Migration("20181121140834_CompVulnInfos_Add_001")]
    partial class CompVulnInfos_Add_001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.TcompInfo", b =>
                {
                    b.Property<long>("CompSeq")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COMP_SEQ")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompDescription")
                        .HasColumnName("COMP_DESCRIPTION")
                        .HasMaxLength(1024);

                    b.Property<string>("CompDetailGubun")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COMP_DETAIL_GUBUN")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(32);

                    b.Property<string>("CompName")
                        .IsRequired()
                        .HasColumnName("COMP_NAME")
                        .HasMaxLength(128);

                    b.Property<string>("CompRef")
                        .HasColumnName("COMP_REF")
                        .HasMaxLength(256);

                    b.Property<string>("ConfirmYn")
                        .HasColumnName("CONFIRM_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDt")
                        .HasColumnName("CREATE_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .HasColumnName("CREATE_USER_ID")
                        .HasMaxLength(16);

                    b.Property<string>("DiagType")
                        .IsRequired()
                        .HasColumnName("DIAG_TYPE")
                        .HasMaxLength(32);

                    b.Property<string>("StandardYear")
                        .HasColumnName("STANDARD_YEAR")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("UpdateDt")
                        .HasColumnName("UPDATE_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnName("UPDATE_USER_ID")
                        .HasMaxLength(16);

                    b.Property<string>("UseYn")
                        .HasColumnName("USE_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.HasKey("CompSeq");

                    b.ToTable("TCompInfo");
                });

            modelBuilder.Entity("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.Tvuln", b =>
                {
                    b.Property<long>("VulnSeq")
                        .HasColumnName("VULN_SEQ");

                    b.Property<string>("ApplyTarget")
                        .HasColumnName("APPLY_TARGET")
                        .HasMaxLength(1024);

                    b.Property<string>("ApplyTime")
                        .HasColumnName("APPLY_TIME")
                        .HasMaxLength(2);

                    b.Property<string>("AutoYn")
                        .HasColumnName("AUTO_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ClientStandardId")
                        .HasColumnName("CLIENT_STANDARD_ID")
                        .HasMaxLength(32);

                    b.Property<DateTime?>("CreateDt")
                        .HasColumnName("CREATE_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .HasColumnName("CREATE_USER_ID")
                        .HasMaxLength(16);

                    b.Property<string>("Detail")
                        .HasColumnName("DETAIL")
                        .HasColumnType("text");

                    b.Property<string>("DetailPath")
                        .HasColumnName("DETAIL_PATH")
                        .HasMaxLength(256);

                    b.Property<string>("Effect")
                        .HasColumnName("EFFECT")
                        .HasMaxLength(2048);

                    b.Property<string>("ExceptCd")
                        .HasColumnName("EXCEPT_CD")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("ExceptDt")
                        .HasColumnName("EXCEPT_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("ExceptReason")
                        .HasColumnName("EXCEPT_REASON")
                        .HasMaxLength(1024);

                    b.Property<string>("ExceptTermFr")
                        .HasColumnName("EXCEPT_TERM_FR")
                        .HasMaxLength(8);

                    b.Property<string>("ExceptTermTo")
                        .HasColumnName("EXCEPT_TERM_TO")
                        .HasMaxLength(8);

                    b.Property<string>("ExceptTermType")
                        .HasColumnName("EXCEPT_TERM_TYPE")
                        .HasMaxLength(2);

                    b.Property<string>("ExceptUserId")
                        .HasColumnName("EXCEPT_USER_ID")
                        .HasMaxLength(16);

                    b.Property<long>("GroupSeq")
                        .HasColumnName("GROUP_SEQ");

                    b.Property<string>("Judgement")
                        .HasColumnName("JUDGEMENT")
                        .HasMaxLength(2048);

                    b.Property<string>("ManageId")
                        .HasColumnName("MANAGE_ID")
                        .HasMaxLength(32);

                    b.Property<string>("ManagementVulnYn")
                        .HasColumnName("MANAGEMENT_VULN_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ManualYn")
                        .HasColumnName("MANUAL_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("OrgParserContents")
                        .HasColumnName("ORG_PARSER_CONTENTS")
                        .HasColumnType("text");

                    b.Property<string>("Overview")
                        .HasColumnName("OVERVIEW");

                    b.Property<string>("ParserContents")
                        .HasColumnName("PARSER_CONTENTS")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnName("RATE")
                        .HasMaxLength(32);

                    b.Property<string>("Refrrence")
                        .HasColumnName("REFRRENCE")
                        .HasMaxLength(2048);

                    b.Property<string>("Remedy")
                        .HasColumnName("REMEDY")
                        .HasColumnType("text");

                    b.Property<string>("RemedyDetail")
                        .HasColumnName("REMEDY_DETAIL")
                        .HasColumnType("text");

                    b.Property<string>("RemedyPath")
                        .HasColumnName("REMEDY_PATH")
                        .HasMaxLength(256);

                    b.Property<string>("RuleYn")
                        .HasColumnName("RULE_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("Score")
                        .HasColumnName("SCORE")
                        .HasMaxLength(2);

                    b.Property<int?>("SortOrder")
                        .HasColumnName("SORT_ORDER");

                    b.Property<DateTime?>("UpdateDt")
                        .HasColumnName("UPDATE_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnName("UPDATE_USER_ID")
                        .HasMaxLength(16);

                    b.Property<string>("UseYn")
                        .HasColumnName("USE_YN")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<long?>("Vulgroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VULGROUP")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("VulnName")
                        .HasColumnName("VULN_NAME")
                        .HasMaxLength(128);

                    b.Property<string>("Vulno")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VULNO")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(32);

                    b.HasKey("VulnSeq");

                    b.HasIndex("GroupSeq");

                    b.ToTable("TVuln");
                });

            modelBuilder.Entity("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.TvulnGroup", b =>
                {
                    b.Property<long>("GroupSeq")
                        .HasColumnName("GROUP_SEQ");

                    b.Property<long>("CompSeq")
                        .HasColumnName("COMP_SEQ");

                    b.Property<DateTime?>("CreateDt")
                        .HasColumnName("CREATE_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateUserId")
                        .HasColumnName("CREATE_USER_ID")
                        .HasMaxLength(16);

                    b.Property<string>("DiagKind")
                        .HasColumnName("DIAG_KIND")
                        .HasMaxLength(32);

                    b.Property<string>("DiagTerm")
                        .HasColumnName("DIAG_TERM")
                        .HasMaxLength(32);

                    b.Property<string>("DiagTool")
                        .HasColumnName("DIAG_TOOL")
                        .HasMaxLength(32);

                    b.Property<string>("GroupId")
                        .HasColumnName("GROUP_ID")
                        .HasMaxLength(32);

                    b.Property<string>("GroupName")
                        .HasColumnName("GROUP_NAME")
                        .HasMaxLength(128);

                    b.Property<string>("GroupType")
                        .IsRequired()
                        .HasColumnName("GROUP_TYPE")
                        .HasMaxLength(32);

                    b.Property<int>("Level")
                        .HasColumnName("LEVEL");

                    b.Property<int?>("SortOrder")
                        .HasColumnName("SORT_ORDER");

                    b.Property<DateTime?>("UpdateDt")
                        .HasColumnName("UPDATE_DT")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateUserId")
                        .HasColumnName("UPDATE_USER_ID")
                        .HasMaxLength(16);

                    b.Property<long>("UpperSeq")
                        .HasColumnName("UPPER_SEQ");

                    b.HasKey("GroupSeq");

                    b.HasIndex("CompSeq");

                    b.ToTable("TVulnGroup");
                });

            modelBuilder.Entity("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.Tvuln", b =>
                {
                    b.HasOne("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.TvulnGroup", "GroupSeqNavigation")
                        .WithMany("Tvuln")
                        .HasForeignKey("GroupSeq")
                        .HasConstraintName("FK__TVuln__GROUP_SEQ__536E27D9");
                });

            modelBuilder.Entity("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.TvulnGroup", b =>
                {
                    b.HasOne("PARK.APP.FIRST.Areas.VulnManage.Models.Vuln.TcompInfo", "CompSeqNavigation")
                        .WithMany("TvulnGroup")
                        .HasForeignKey("CompSeq")
                        .HasConstraintName("FK__TVulnGrou__COMP___5091BB2E");
                });
#pragma warning restore 612, 618
        }
    }
}
